#!/usr/bin/php
<?php

require_once("trap_rect.php");
require_once("simp_gauss.php");

function fill_array($argv)
{
	$i = 2;

	$tab_var[0] = $argv[1];
  	if (isset($argv[$i]))
    {
    	$tab_var[1] = $argv[$i];
  		$i += 1;
	}
  	else
    	$tab_var[1] = 0;
  	if (isset($argv[$i]))
    {
    	$tab_var[2] = $argv[$i];
  		$i += 1;
	}
  	else
    	$tab_var[2] = 5000;
  	if (isset($argv[$i]) && $argv[$i] > 0)
   	{
   		$tab_var[3] = $argv[$i];
		$i += 1;
	}		
  	else
    	$tab_var[3] = 10000;
  	if (isset($argv[$i]) && $argv[$i] >= 0)
  	{
   		$tab_var[4] = $argv[$i];
 		$i += 1;
	}
  	else
   		$tab_var[4] = 10;
  	return($tab_var);
}

if (count($argv) < 2)
{
	echo "\033[31;1mUsage: {./110borwein} {n (positive)} {start} {end} {subdivision (positive)} {precision (positive)}\n";
	echo "\033[31;1mMESSAGE CONSEIL\n";
	exit(0);
}
else if ($argv[1] < 0)
{	
	echo "Error: ".$argv[1]."\nNeed a positive value as 1st argument: 'n'\n"; 
	exit(1);
}
else
{
	for ($i = 1; $i != count($argv); $i++)
	{
    	if (!is_numeric($argv[$i])) 
    	{
        	echo '{'.$argv[$i]."} isn't a number !!!\n";
    		exit(0);
    	}
	}
	$array = fill_array($argv);
	rect_method($array);
	trap_method($array);
	simp_method($array);
	gauss_method($array);
}

?>