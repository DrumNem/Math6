#!/usr/bin/python

import  matplotlib.pyplot as plt
import  numpy as np
import  os
import  sys

################################ CHECK ####################################

def     check(tab):
    if (len(tab) != 2):
        print("You may only insert 1 argument.")
        sys.exit(0)

    try :
        float(tab[1])
    except:
        print("The argument you passed must be an integer equal or higher than 0.")
        sys.exit(0)

    x = tab[1]
    if (x < 0):
        print("Your argument must be a positive number.")
        sys.exit(0)
    try:
        os.environ["DISPLAY"]
    except:
        print('No environment found')
        sys.exit(1)


################################# FX ######################################

def     fx(n, x):

    somme = 1
    k = 0

    while (k <= n):
        if (x != 0):
            somme = somme * (np.sin(x / ((2 * k) + 1)) / (x / ((2 * k) + 1)))
        k = k + 1
    return (somme)


############################# RECTANGLE ###################################

def     rectangle(tab):

    somme = 0
    i = 0

    while (i < 10000):
        somme = somme + fx(int(tab[1]), i * 0.5)
        i = i + 1
    somme = somme * 0.5

    print("\033[01;04;37mMethode des rectangles:\033[0m")
    print('I' + str(tab[1]) + ': ' + str(somme))
    print('Diff: ' + str(somme - np.pi / 2) + '\n')

############################## TRAPEZE ####################################

def     trapeze(tab):

    somme = 0
    somme1 = 0
    i = 1
    tabi = [ ]
    tabx = [ ]


    while (i < 10000):
        somme = somme + fx(int(tab[1]), i * 0.5)
        i = i + 1
        tabi.append(i)
        somme1 = ((somme * 2) + fx(int(tab[1]), 0) + fx(int(tab[1]), 5000)) * (0.25)
        tabx.append(somme1)

    somme1 = ((somme * 2) + fx(int(tab[1]), 0) + fx(int(tab[1]), 5000)) * (0.25)

    print("\033[01;04;37mMethode des trapezes:\033[0m")
    print('I' + str(tab[1]) + ': ' + str(somme1))
    print('Diff: ' + str(somme1 - np.pi / 2) + '\n')

    plt.plot(tabi, tabx)
    plt.xlabel('Nombre de Subdivisions')
    plt.ylabel("Valeurs de la somme")
    plt.title("Trace de la courbe selon la methode des Trapezes")
    plt.show()

############################### SIMPSON ###################################

def     simpson(tab):

    somme1 = 0
    somme2 = 0
    somme3 = 0
    i = 1

    while (i < 10000):
        somme1 = somme1 + fx(int(tab[1]), i * 0.5)
        i = i + 1

    i = 0
    while (i < 10000):
        somme2 = somme2 + fx(int(tab[1]), (i * 0.5) + 0.25)
        i = i + 1

    somme3 = ((somme1 * 2) + (somme2 * 4) + fx(int(tab[1]), 0) + fx(int(tab[1]), 5000)) * 0.083333333

    print("\033[01;04;37mMethode de Simpson:\033[0m")
    print('I' + str(tab[1]) + ': ' + str(somme3))
    print('Diff: ' + str(somme3 - np.pi / 2) + '\n')

################################ MAIN #####################################

try:
    check(sys.argv)
    rectangle(sys.argv)
    simpson(sys.argv)
    trapeze(sys.argv)

except:
    print("An error occurred during the execution of the program")
